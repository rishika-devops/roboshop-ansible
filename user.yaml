- name: configuring user
  hosts: user
  become: yes
  tasks:
  - name: disbaling the current version and enabling nodejs 18 version
    ansible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:18 -y ;
  - name: installing nodejs
    ansible.builtin.dnf:
     name: nodejs
     state: present
  - name: adding roboshop user
    ansible.builtin.user:
      name: roboshop
  - name: creating app directory
    ansible.builtin.file:
     path: /app
     state: directory
  - name: download application code
    ansible.builtin.get_url:
     url: https://roboshop-builds.s3.amazonaws.com/user.zip
     dest: /tmp/user.zip
  - name: unzipping user code
    ansible.builtin.unarchive:
     src: /tmp/user.zip
     dest: /app
     remote_src: yes
  - name: installing dependancies
    ansible.builtin.command: npm install
    args:
      chdir: /app
  - name: copying user service
    ansible.builtin.copy:
     src: user.service
     dest: /etc/systemd/system/user.service
  - name: reloading daemon
    ansible.builtin.systemd_service:
     daemon_reload: true
  - name: enabling and starting user
    ansible.builtin.service:
     name: user
     state: started
     enabled: yes
  - name: copying mongodb repo
    ansible.builtin.copy:
     src: mongodb.repo
     dest: /etc/yum.repos.d/mongo.repo
  - name: installing mongodb-org
    ansible.builtin.command: dnf install mongodb-org-shell -y
  - name: checking schema exists or not
    ansible.builtin.shell: mongo --host mongodb.sowjanyaaws.online --quiet --eval 'db=db.getSiblingDB("user"); db.users.count()'
    register: user
  - name: print user count
    ansible.builtin.debug:
     msg: "user count is::{{user}}"
  - name: loading user data
    ansible.builtin.command: mongo --host mongodb.sowjanyaaws.online < /app/schema/user.js
    when: user_count.stdout == "0"
  - name: restarting user
    ansible.builtin.service:
     name: user
     state: restarted
     