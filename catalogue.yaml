- name: creation of catalogue page
  hosts: catalogue
  become: yes
  tasks:
  - name: disabling current version and enabling nodejs18 version
    ansible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:18 -y
  - name: installing nodejs18 version
    ansible.builtin.package:
     name: nodejs
     state: started
  - name: adding roboshop user
    ansible.builtin.user:
     name: roboshop
  - name: creating app directory
    ansible.builtin.file:
     path: /app
     state: directory
  - name: download catalogue code to tmp directory
    ansible.builtin.get_url:
     url: https://roboshop-builds.s3.amazonaws.com/catalogue.zip
     dest: /tmp/catalogue.zip
  - name: unzipping code in app directory
    ansible.builtin.unarchive:
     src: /tmp/catalogue.zip
     dest: /app
     remote_src: yes
  - name: installing dependancies in app directory
    ansible.builtin.command: npm install
    args:
     chdir: /app
  - name: copying catalogue service
    ansible.builtin.copy:
     src: catalogue.repo
     dest: /etc/systemd/system/catalogue.service
  - name: reloading daemon
    ansible.builtin.systemd_service:
     state: restarted
     daemon_reload: true
     name: catalogue
  - name: copying mongo repo
    ansible.builtin.copy:
     src: mongodb.repo
     dest: /etc/yum.repos.d/mongo.repo
  - name: installing mongodb 
    ansible.builtin.package: 
     name: mongodb-org-shell
     state: started
  - name: loading catalogue data
    ansible.builtin.command: mongo --host mongodb.sowjanyaaws.online --quiet --eval 'db=db.getSiblingDB("catalogue"); db.products.count()'
    register: products_count
  - name: print the count
    ansible.builtin.debug:
     msg: "product count:{{product_count}}"
  - name: load catalogue data
    ansible.builtin.command: mongo --host MONGODB-SERVER-IPADDRESS < /app/schema/catalogue.js
    when: product_count == "0"
  - name: start and enable catalogue
    ansible.builtin.service:
     name: catalogue
     state: restarted
     enabled: yes

